{"version":3,"sources":["components/WorldInfo/index.js","components/VietnamInfo/index.js","components/CountryInfo/index.js","containers/CountriesList/index.js","components/LoadingScreen/index.js","containers/App/index.js","reportWebVitals.js","index.js"],"names":["WorldInfo","React","memo","totalCases","totalDeaths","totalRecovered","console","log","className","toString","replace","VietnamInfo","cases","deaths","recovered","flag","src","alt","CountryInfo","index","countryFlag","countryName","countryCases","countryDeaths","countryRecovered","CountriesList","countriesInfo","filter","missingId","newCountriesInfo","sort","countries1","countries2","slice","countryInfo","country","toLowerCase","includes","iso2","iso3","Array","isArray","length","map","_id","LoadingScreen","App","useState","setCountriesInfo","useEffect","fetchData","timerId","setInterval","clearInterval","a","axios","then","response","data","catch","error","searchPlaceholder","useMemo","vietnamInfo","i","reduce","total","countryInput","setCountryInput","countrySearch","setCountrySearch","handleCountrySearch","event","preventDefault","showResult","onSubmit","type","onClick","value","onChange","target","placeholder","trim","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7fa9533e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\nconst WorldInfo = React.memo(({ totalCases, totalDeaths, totalRecovered }) => {\r\n  console.log(\"Rendering: WorldInfo\");\r\n  return (\r\n    <div className=\"WorldInfo\">\r\n      <div className=\"TotalCases\">\r\n        {totalCases.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n      </div>\r\n      <div className=\"WorldInfoBottom\">\r\n        <div className=\"TotalDeathWrapper\">\r\n          <div className=\"TotalDeaths\">\r\n            {totalDeaths.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n          </div>\r\n          <div className=\"TotalDeathsText\">DEATHS</div>\r\n        </div>\r\n        <div className=\"TotalRecoveredWrapper\">\r\n          <div className=\"TotalRecovered\">\r\n            {totalRecovered.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n          </div>\r\n          <div className=\"TotalRecoveredText\">RECOVERIES</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\nexport default WorldInfo;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n// if props is vietnamInfo (object, then we should not use React.memo)\r\nconst VietnamInfo = React.memo(({ cases, deaths, recovered, flag }) => {\r\n  console.log(\"Rendering: VietnamInfo\");\r\n  return (\r\n    <div className=\"VietnamInfo\">\r\n      <div className=\"PinItem\">\r\n        <i className=\"fa fa-map-marker\" aria-hidden=\"true\"></i>\r\n      </div>\r\n      <div className=\"VietnamFlag\">\r\n        <img src={flag} alt=\"Vietnam Flag\" />\r\n      </div>\r\n      <div className=\"Vietnam\">Viet Nam</div>\r\n      <div className=\"VietnamCovid\">\r\n        <div className=\"VietnamCases\">\r\n          {cases.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n        </div>\r\n        <div className=\"VietnamWrapper\">\r\n          <div className=\"VietnamDeaths\">\r\n            {deaths.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n          </div>\r\n          <div className=\"VietnamRecovered\">\r\n            {recovered.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\nexport default VietnamInfo;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nconst CountryInfo = React.memo(\r\n  ({\r\n    index,\r\n    countryFlag,\r\n    countryName,\r\n    countryCases,\r\n    countryDeaths,\r\n    countryRecovered,\r\n  }) => {\r\n    console.log(\"Rendering: CountryInfo\");\r\n    return (\r\n      <div className=\"CountryInfo\">\r\n        <div className=\"CountryIndex\">{index + 1}</div>\r\n        <div className=\"CountryFlag\">\r\n          <img src={countryFlag} alt={countryName + \" Flag\"} />\r\n        </div>\r\n        <div className=\"CountryName\">{countryName}</div>\r\n        <div className=\"CountryCovid\">\r\n          <div className=\"CountryCases\">\r\n            {countryCases.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n          </div>\r\n          <div className=\"CountryWrapper\">\r\n            <div className=\"CountryDeaths\">\r\n              {countryDeaths.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n            </div>\r\n            <div className=\"CountryRecovered\">\r\n              {countryRecovered\r\n                .toString()\r\n                .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default CountryInfo;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nimport CountryInfo from \"../../components/CountryInfo\";\r\nconst CountriesList = React.memo(({ countriesInfo, filter }) => {\r\n  let missingId = 0;\r\n\r\n  console.log(\"Rendering: CountriesList\");\r\n  let newCountriesInfo = countriesInfo;\r\n  if (filter === \"\") {\r\n    newCountriesInfo = [...countriesInfo]\r\n      .sort(function (countries1, countries2) {\r\n        return countries2.cases - countries1.cases;\r\n        // return countries2.country - countries1.country;\r\n      })\r\n      .slice(0, 10);\r\n  } else {\r\n    newCountriesInfo = countriesInfo.filter((countryInfo) => {\r\n      return (\r\n        (countryInfo.country === null ? \"\" : countryInfo.country)\r\n          .toLowerCase()\r\n          .includes(filter.toLowerCase()) ||\r\n        (countryInfo.countryInfo.iso2 === null\r\n          ? \"\"\r\n          : countryInfo.countryInfo.iso2\r\n        )\r\n          .toLowerCase()\r\n          .includes(filter.toLowerCase()) ||\r\n        (countryInfo.countryInfo.iso3 === null\r\n          ? \"\"\r\n          : countryInfo.countryInfo.iso3\r\n        )\r\n          .toLowerCase()\r\n          .includes(filter.toLowerCase())\r\n      );\r\n    });\r\n  }\r\n  return (\r\n    <div className=\"CountriesList\">\r\n      {Array.isArray(newCountriesInfo) && newCountriesInfo.length !== 0 ? (\r\n        newCountriesInfo.map((countryInfo, index) => (\r\n          <CountryInfo\r\n            key={\r\n              countryInfo.countryInfo._id === null\r\n                ? --missingId\r\n                : countryInfo.countryInfo._id\r\n            }\r\n            index={index}\r\n            countryFlag={countryInfo.countryInfo.flag}\r\n            countryName={countryInfo.country}\r\n            countryCases={countryInfo.cases}\r\n            countryDeaths={countryInfo.deaths}\r\n            countryRecovered={countryInfo.recovered}\r\n          />\r\n        ))\r\n      ) : (\r\n        <div className=\"CountryNotFound\">Not Found</div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default CountriesList;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nconst LoadingScreen = () => (\r\n  <div className=\"LoadingScreen\">\r\n    Loading\r\n    <i className=\"fa fa-spinner fa-spin\"></i>\r\n  </div>\r\n);\r\nexport default LoadingScreen;\r\n","// eslint-disable-next-line\r\nimport React, { useEffect, useState, useMemo, useCallback } from \"react\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport WorldInfo from \"../../components/WorldInfo\";\r\nimport VietnamInfo from \"../../components/VietnamInfo\";\r\nimport CountriesList from \"../CountriesList\";\r\nimport axios from \"axios\";\r\nimport \"./style.css\";\r\nimport LoadingScreen from \"../../components/LoadingScreen\";\r\n\r\nconst App = () => {\r\n  console.log(\"Rendering: App\");\r\n  const [countriesInfo, setCountriesInfo] = useState([]);\r\n\r\n  // fetch in a 3-minute interval\r\n  useEffect(() => {\r\n    fetchData();\r\n    const timerId = setInterval(() => fetchData(), 3 * 60 * 1000);\r\n    return () => clearInterval(timerId);\r\n  }, []);\r\n\r\n  // fetch countries info from API using axios\r\n  const fetchData = async () => {\r\n    await axios(\"https://disease.sh/v3/covid-19/countries\")\r\n      .then((response) => setCountriesInfo(response.data))\r\n      .catch((error) => console.log(\"Error fetching data: \", error));\r\n  };\r\n\r\n  // information about number of region\r\n  const searchPlaceholder = useMemo(() => {\r\n    return \"Search \" + countriesInfo.length.toString() + \" regions...\";\r\n  }, [countriesInfo]);\r\n\r\n  // information about Vietnam\r\n  const vietnamInfo = useMemo(() => {\r\n    for (var i = 0; i < countriesInfo.length; i++)\r\n      if (countriesInfo[i].country === \"Vietnam\") return countriesInfo[i];\r\n  }, [countriesInfo]);\r\n\r\n  // information about total cases, deaths, recovered\r\n  const totalCases = useMemo(\r\n    () => countriesInfo.reduce((total, { cases }) => total + cases, 0),\r\n    [countriesInfo]\r\n  );\r\n  const totalDeaths = useMemo(\r\n    () => countriesInfo.reduce((total, { deaths }) => total + deaths, 0),\r\n    [countriesInfo]\r\n  );\r\n  const totalRecovered = useMemo(\r\n    () => countriesInfo.reduce((total, { recovered }) => total + recovered, 0),\r\n    [countriesInfo]\r\n  );\r\n\r\n  // search country\r\n  const [countryInput, setCountryInput] = useState(\"\");\r\n  const [countrySearch, setCountrySearch] = useState(\"\");\r\n\r\n  const handleCountryInput = (event) => {\r\n    setCountryInput(event.target.value);\r\n  };\r\n\r\n  const handleCountrySearch = (event) => {\r\n    event.preventDefault();\r\n    setCountrySearch(countryInput);\r\n  };\r\n\r\n  const showResult = useMemo(\r\n    () => (countrySearch === \"\" ? \"\" : \"Show Result(s) for \" + countrySearch),\r\n    [countrySearch]\r\n  );\r\n\r\n  if (Array.isArray(countriesInfo) && countriesInfo.length === 0)\r\n    return <LoadingScreen />;\r\n  else\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"AppContainer\">\r\n          <WorldInfo\r\n            totalCases={totalCases}\r\n            totalDeaths={totalDeaths}\r\n            totalRecovered={totalRecovered}\r\n          />\r\n          <VietnamInfo\r\n            cases={vietnamInfo.cases}\r\n            deaths={vietnamInfo.deaths}\r\n            recovered={vietnamInfo.recovered}\r\n            flag={vietnamInfo.countryInfo.flag}\r\n          />\r\n          <div className=\"SearchBar\">\r\n            <form onSubmit={handleCountrySearch}>\r\n              <button type=\"button\" onClick={handleCountrySearch}>\r\n                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n              </button>\r\n              <input\r\n                type=\"text\"\r\n                value={countryInput}\r\n                onChange={handleCountryInput}\r\n                placeholder={searchPlaceholder}\r\n              />\r\n            </form>\r\n          </div>\r\n          {showResult === \"\" ? (\r\n            <div></div>\r\n          ) : (\r\n            <div className=\"ShowResult\">{showResult}</div>\r\n          )}\r\n          <CountriesList\r\n            countriesInfo={countriesInfo}\r\n            filter={countrySearch.trim()}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}